package rocks.zipcode.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DataSourceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDataSourceAllPropertiesEquals(DataSource expected, DataSource actual) {
        assertDataSourceAutoGeneratedPropertiesEquals(expected, actual);
        assertDataSourceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDataSourceAllUpdatablePropertiesEquals(DataSource expected, DataSource actual) {
        assertDataSourceUpdatableFieldsEquals(expected, actual);
        assertDataSourceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDataSourceAutoGeneratedPropertiesEquals(DataSource expected, DataSource actual) {
        assertThat(expected)
            .as("Verify DataSource auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDataSourceUpdatableFieldsEquals(DataSource expected, DataSource actual) {
        assertThat(expected)
            .as("Verify DataSource relevant properties")
            .satisfies(e -> assertThat(e.getSourceName()).as("check sourceName").isEqualTo(actual.getSourceName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDataSourceUpdatableRelationshipsEquals(DataSource expected, DataSource actual) {
        assertThat(expected)
            .as("Verify DataSource relationships")
            .satisfies(e -> assertThat(e.getBodyVitalsLog()).as("check bodyVitalsLog").isEqualTo(actual.getBodyVitalsLog()));
    }
}
