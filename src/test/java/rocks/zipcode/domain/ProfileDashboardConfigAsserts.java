package rocks.zipcode.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfileDashboardConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileDashboardConfigAllPropertiesEquals(ProfileDashboardConfig expected, ProfileDashboardConfig actual) {
        assertProfileDashboardConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertProfileDashboardConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileDashboardConfigAllUpdatablePropertiesEquals(
        ProfileDashboardConfig expected,
        ProfileDashboardConfig actual
    ) {
        assertProfileDashboardConfigUpdatableFieldsEquals(expected, actual);
        assertProfileDashboardConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileDashboardConfigAutoGeneratedPropertiesEquals(
        ProfileDashboardConfig expected,
        ProfileDashboardConfig actual
    ) {
        assertThat(expected)
            .as("Verify ProfileDashboardConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileDashboardConfigUpdatableFieldsEquals(ProfileDashboardConfig expected, ProfileDashboardConfig actual) {
        assertThat(expected)
            .as("Verify ProfileDashboardConfig relevant properties")
            .satisfies(
                e -> assertThat(e.getIsBloodGlucoseShown()).as("check isBloodGlucoseShown").isEqualTo(actual.getIsBloodGlucoseShown())
            )
            .satisfies(
                e -> assertThat(e.getIsBloodPressureShown()).as("check isBloodPressureShown").isEqualTo(actual.getIsBloodPressureShown())
            )
            .satisfies(
                e ->
                    assertThat(e.getIsBodyCompositionShown())
                        .as("check isBodyCompositionShown")
                        .isEqualTo(actual.getIsBodyCompositionShown())
            )
            .satisfies(
                e ->
                    assertThat(e.getIsBloodCholesterolShown())
                        .as("check isBloodCholesterolShown")
                        .isEqualTo(actual.getIsBloodCholesterolShown())
            )
            .satisfies(e -> assertThat(e.getIsBodyHeightShown()).as("check isBodyHeightShown").isEqualTo(actual.getIsBodyHeightShown()))
            .satisfies(e -> assertThat(e.getIsBodyWeightShown()).as("check isBodyWeightShown").isEqualTo(actual.getIsBodyWeightShown()))
            .satisfies(
                e -> assertThat(e.getIsCaloriesBurntShown()).as("check isCaloriesBurntShown").isEqualTo(actual.getIsCaloriesBurntShown())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileDashboardConfigUpdatableRelationshipsEquals(
        ProfileDashboardConfig expected,
        ProfileDashboardConfig actual
    ) {
        assertThat(expected)
            .as("Verify ProfileDashboardConfig relationships")
            .satisfies(e -> assertThat(e.getUserProfile()).as("check userProfile").isEqualTo(actual.getUserProfile()));
    }
}
