package rocks.zipcode.domain;

import static org.assertj.core.api.Assertions.assertThat;
import static rocks.zipcode.domain.AssertUtils.zonedDataTimeSameInstant;

public class BodyVitalsLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBodyVitalsLogAllPropertiesEquals(BodyVitalsLog expected, BodyVitalsLog actual) {
        assertBodyVitalsLogAutoGeneratedPropertiesEquals(expected, actual);
        assertBodyVitalsLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBodyVitalsLogAllUpdatablePropertiesEquals(BodyVitalsLog expected, BodyVitalsLog actual) {
        assertBodyVitalsLogUpdatableFieldsEquals(expected, actual);
        assertBodyVitalsLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBodyVitalsLogAutoGeneratedPropertiesEquals(BodyVitalsLog expected, BodyVitalsLog actual) {
        assertThat(expected)
            .as("Verify BodyVitalsLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBodyVitalsLogUpdatableFieldsEquals(BodyVitalsLog expected, BodyVitalsLog actual) {
        assertThat(expected)
            .as("Verify BodyVitalsLog relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDtCreated())
                        .as("check dtCreated")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getDtCreated())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBodyVitalsLogUpdatableRelationshipsEquals(BodyVitalsLog expected, BodyVitalsLog actual) {
        assertThat(expected)
            .as("Verify BodyVitalsLog relationships")
            .satisfies(e -> assertThat(e.getUserProfile()).as("check userProfile").isEqualTo(actual.getUserProfile()));
    }
}
